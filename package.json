{
  "name": "hapi-babel-baseline",
  "version": "1.0.0",
  "description": "baseline project with hapi, babel, eslint, jwt, and jasmine setup",
  "main": "index.js",
  "engines": {
    "node": "10.0.0"
  },
  "scripts": {
    "start": "node index.js",
    "eslint": "eslint ./src --fix",
    "test:integration": "NODE_ENV=test-integration jasmine JASMINE_CONFIG_PATH=src/test/integration/jasmine.json",
    "test:unit": "NODE_ENV=test-unit jasmine JASMINE_CONFIG_PATH=src/test/unit/jasmine.json",
    "test": "npm run test:unit",
    "build-no-clean": "babel src --out-dir build --source-maps",
    "build-watch": "babel src --out-dir build --source-maps --watch",
    "docker:build": "docker build -t \"hapi-babel\" .",
    "docker:run": "docker run --log-driver=gelf --log-opt gelf-address=udp://127.0.0.1:12201 --log-opt tag=\"hapi-local-testing\" -ti --rm --expose=${SERVER_PORT} -p ${SERVER_PORT}:${SERVER_PORT} -e NODE_ENV=${NODE_ENV} -e SERVER_PORT=${SERVER_PORT}  hapi-babel",
    "docker:runintegration": "docker run --log-driver=gelf --log-opt gelf-address=udp://127.0.0.1:12201 --log-opt tag=\"hapi-local-testing\" -i --rm --expose=3000 -p 3000:3000 -e NODE_ENV=test-integration -e BYPASS_USER_AUTH=true -e SERVER_PORT=3000  hapi-babel",
    "clean": "rm -rf build",
    "build": "npm run clean && npm run build-no-clean"
  },
  "dependencies": {
    "bluebird": "^3.5.1",
    "boom": "^7.2.0",
    "config": "^1.30.0",
    "glob": "^7.1.2",
    "hapi": "^17.5.1",
    "hapi-auth-jwt2": "^8.1.0",
    "hapi-swagger": "^9.1.1",
    "inert": "^5.1.0",
    "joi": "^13.4.0",
    "logger": "git+http://bitbucket.is.com:7990/scm/tg/logger.git#v1.1.0",
    "unirest": "^0.5.1",
    "vision": "^5.3.3"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
    "babel-plugin-transform-object-rest-spread": "^6.16.0",
    "jasmine": "2.4.1"
  }
}
